// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Image {
  url         String
  value       Int
}

type Step {
  order        Int
  description  String
}

model Recipe {
  recipe_id                 String     @id @default(auto()) @map("_id") @db.ObjectId
  author_id                 String
  title                     String
  description               String?    
  prep_time                 Int
  cook_time                 Int
  image                     String?
  steps                     Step[] 
  recipeIngredients         RecipeIngredient[]

  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Ingredient {
  id                  String @id @default(auto()) @map("_id") @db.ObjectId
  name                String @unique
  description         String?
  category            String?
  recipeIngredients   RecipeIngredient[]

  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
}

model RecipeIngredient {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  recipeId      String       @db.ObjectId
  ingredientId  String       @db.ObjectId
  quantity      Float
  unit          String
  recipe        Recipe       @relation(fields: [recipeId], references: [recipe_id])
  ingredient    Ingredient   @relation(fields: [ingredientId], references: [id])

  // Ensuring each recipe-ingredient pair is unique
  @@unique([recipeId, ingredientId]) // Unique combination of recipeId and ingredientId
}